<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yetx.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.yetx.pojo.Article" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cover" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="like_counts" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="collect_counts" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yetx.pojo.Article" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cover" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="like_counts" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="collect_counts" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, title, cover, status, like_counts, collect_counts, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yetx.pojo.Article" >
    insert into article (id, user_id, title, 
      cover, status, like_counts, 
      collect_counts, create_time, content
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{likeCounts,jdbcType=INTEGER}, 
      #{collectCounts,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yetx.pojo.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="likeCounts != null" >
        like_counts,
      </if>
      <if test="collectCounts != null" >
        collect_counts,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="likeCounts != null" >
        #{likeCounts,jdbcType=INTEGER},
      </if>
      <if test="collectCounts != null" >
        #{collectCounts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yetx.pojo.Article" >
    update article
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="likeCounts != null" >
        like_counts = #{likeCounts,jdbcType=INTEGER},
      </if>
      <if test="collectCounts != null" >
        collect_counts = #{collectCounts,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yetx.pojo.Article" >
    update article
    set user_id = #{userId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      like_counts = #{likeCounts,jdbcType=INTEGER},
      collect_counts = #{collectCounts,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yetx.pojo.Article" >
    update article
    set user_id = #{userId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      like_counts = #{likeCounts,jdbcType=INTEGER},
      collect_counts = #{collectCounts,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>